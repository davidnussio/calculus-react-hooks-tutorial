{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["recognition","window","webkitSpeechRecognition","getSpeechMessage","text","callback","arguments","length","undefined","voices","speechSynthesis","getVoices","msg","SpeechSynthesisUtterance","voice","voiceURI","lang","onend","getRandomIntInclusive","min","max","Math","ceil","floor","random","getCalculus","a","b","parseResponse","response","numbersFound","replace","split","parseInt","continuous","interimResults","Calculus","_ref","operator","result","react_default","createElement","Response","_ref2","isCorrectAnswer","classes","classNames","correct","error","className","History","_ref3","history","map","_ref4","i","_ref5","Object","slicedToArray","key","Fragment","App","_ref6","_ref6$min","_ref6$max","_ref6$operator","_useState","useState","_useState2","calculus","setCalculus","_useState3","_useState4","matrix","setMatrix","_useState5","_useState6","listening","setListening","_useState7","_useState8","setResponse","_useState9","_useState10","setHistory","_useMemo","useMemo","_useMemo2","useEffect","concat","toConsumableArray","event","speak","start","onresult","resultIndex","results","isFinal","speechResponse","transcript","console","warn","onerror","log","stop","messages","getCorrectMotivationMessage","App_History","App_Calculus","App_Response","disabled","onClick","e","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oNASIA,SAAc,IAAIC,OAAOC,yBAK7B,SAASC,EAAiBC,GAA2B,IAArBC,EAAqBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAV,aACnCG,EAASR,OAAOS,gBAAgBC,YAChCC,EAAM,IAAIC,yBAMhB,OALAD,EAAIE,MAAQL,EAAO,GACnBG,EAAIG,SAAW,SACfH,EAAII,KAAO,QACXJ,EAAIR,KAAOA,EACXQ,EAAIK,MAAQZ,EACLO,EAGT,SAASM,EAAsBC,EAAKC,GAGlC,OAFAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,EAAM,IAAMA,EAGvD,SAASM,EAAYN,EAAKC,GACxB,IAAMM,EAAIR,EAAsBC,EAAKC,GAC/BO,EAAIT,EAAsBC,EAAKC,GACrC,MAAO,CAACM,EAAGC,EAAGD,EAAIC,GAGpB,SAASC,EAAcC,GACrB,IAAMC,EAAeD,EAASE,QAAQ,WAAWC,MAAM,KACvD,OAAOC,SAASH,EAAaA,EAAavB,OAAS,GAAI,IA7BzDP,EAAYkC,YAAa,EACzBlC,EAAYmC,gBAAiB,EAC7BnC,EAAYgB,KAAO,CAAC,QAAS,UAmC7B,IAAMoB,EAAW,SAAAC,GAA0C,IAAvCX,EAAuCW,EAAvCX,EAAGC,EAAoCU,EAApCV,EAAGW,EAAiCD,EAAjCC,SAAUC,EAAuBF,EAAvBE,OAAQV,EAAeQ,EAAfR,SAC1C,OAAIH,GAAKC,EAELa,EAAAd,EAAAe,cAAA,SACGf,EADH,IACOY,EADP,IACkBX,EADlB,MACwBE,EAAWU,EAAS,KAIzCC,EAAAd,EAAAe,cAAA,kBAGHC,EAAW,SAAAC,GAA2C,IAAxCC,EAAwCD,EAAxCC,gBAAiBf,EAAuBc,EAAvBd,SAAUU,EAAaI,EAAbJ,OACvCM,EAAUC,IAAW,CACzBC,QAASH,EACTI,OAAQJ,IAEV,OAAIf,EAEAW,EAAAd,EAAAe,cAAA,iCACoBD,EAAAd,EAAAe,cAAA,SAAIZ,GADxB,IACsCW,EAAAd,EAAAe,cAAA,WACnCG,EACCJ,EAAAd,EAAAe,cAAA,KAAGQ,UAAWJ,GAAd,qCAEAL,EAAAd,EAAAe,cAAA,KAAGQ,UAAWJ,GAAd,8BAC0BL,EAAAd,EAAAe,cAAA,SAAIF,GAD9B,MAODC,EAAAd,EAAAe,cAAA,kBAGHS,EAAU,SAAAC,GAAiB,IAAdC,EAAcD,EAAdC,QACjB,OACEZ,EAAAd,EAAAe,cAAA,UACGW,EAAQC,IAAI,SAAAC,EAAqCC,GAAM,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAzC5B,EAAyC8B,EAAA,GAAtC7B,EAAsC6B,EAAA,GAAnClB,EAAmCkB,EAAA,GAAzB3B,EAAyB2B,EAAA,GAAfjB,EAAeiB,EAAA,GAChDZ,EAAkBf,IAAaU,EACrC,OACEC,EAAAd,EAAAe,cAAA,MAAIkB,IAAKJ,GACN7B,EADH,IACOY,EADP,IACkBX,EADlB,MACwBE,EAAU,IAC/Be,EACCJ,EAAAd,EAAAe,cAAA,QAAMQ,UAAU,WAAhB,UAEAT,EAAAd,EAAAe,cAAAD,EAAAd,EAAAkC,SAAA,KACEpB,EAAAd,EAAAe,cAAA,QAAMQ,UAAU,SAAhB,UADF,IACmCT,EAAAd,EAAAe,cAAA,aAAKF,EAAL,WA0IlCsB,MAhIf,SAAAC,GAAmD,IAAAC,EAAAD,EAApC3C,WAAoC,IAAA4C,EAA9B,EAA8BA,EAAAC,EAAAF,EAA3B1C,WAA2B,IAAA4C,EAArB,EAAqBA,EAAAC,EAAAH,EAAlBxB,gBAAkB,IAAA2B,EAAP,IAAOA,EAAAC,EACjBC,oBAAS,GADQC,EAAAX,OAAAC,EAAA,EAAAD,CAAAS,EAAA,GAC1CG,EAD0CD,EAAA,GAChCE,EADgCF,EAAA,GAAAG,EAErBJ,mBAAS,IAFYK,EAAAf,OAAAC,EAAA,EAAAD,CAAAc,EAAA,GAE1CE,EAF0CD,EAAA,GAElCE,EAFkCF,EAAA,GAAAG,EAGfR,oBAAS,GAHMS,EAAAnB,OAAAC,EAAA,EAAAD,CAAAkB,EAAA,GAG1CE,EAH0CD,EAAA,GAG/BE,EAH+BF,EAAA,GAAAG,EAIjBZ,qBAJiBa,EAAAvB,OAAAC,EAAA,EAAAD,CAAAsB,EAAA,GAI1ClD,EAJ0CmD,EAAA,GAIhCC,EAJgCD,EAAA,GAAAE,EAKnBf,mBAAS,IALUgB,EAAA1B,OAAAC,EAAA,EAAAD,CAAAyB,EAAA,GAK1C9B,EAL0C+B,EAAA,GAKjCC,EALiCD,EAAA,GAAAE,EAO1BC,kBAAQ,WAC7B,OAAIb,EAAOlE,OACFkE,EAAOA,EAAOlE,OAAS,GAEzB,IACN,CAACkE,IAZ6Cc,EAAA9B,OAAAC,EAAA,EAAAD,CAAA4B,EAAA,GAO1C3D,EAP0C6D,EAAA,GAOvC5D,EAPuC4D,EAAA,GAOpChD,EAPoCgD,EAAA,GA2B3C3C,EAAkB0C,kBAAQ,WAC9B,GAAI/C,GAAUV,EACZ,OAAOU,IAAWV,GAGnB,CAACU,EAAQV,IAyDZ,OAvDA2D,oBAAU,WACJnB,GACFK,EAAS,GAAAe,OAAAhC,OAAAiC,EAAA,EAAAjC,CAAKgB,GAAL,CAAahD,EAAYN,EAAKC,OAExC,CAACiD,IAEJmB,oBAAU,WACR,GAAI9D,GAAKC,EAAG,CACV,IAAMf,EAAMT,EAAgB,GAAAsF,OAAI/D,EAAJ,OAAA+D,OAAW9D,GAAK,SAAAgE,GAC1Cb,GAAa,KAEf7E,OAAOS,gBAAgBkF,MAAMhF,KAE9B,CAACc,EAAGC,IAEP6D,oBAAU,gBACUhF,IAAdqE,KAGc,IAAdA,GAAsB7E,GACxBA,EAAY6F,QACZ7F,EAAY8F,SAAW,SAASH,GAC9B,IAAK,IAAIpC,EAAIoC,EAAMI,YAAaxC,EAAIoC,EAAMK,QAAQzF,SAAUgD,EAC1D,GAAIoC,EAAMK,QAAQzC,GAAG0C,QAAS,CAC5B,IAAMC,EAAiBtE,EACrB+D,EAAMK,QAAQzC,GAAG,GAAG4C,YAEtBlB,EAAYiB,GACZd,EAAU,GAAAK,OAAAhC,OAAAiC,EAAA,EAAAjC,CAAKL,GAAL,CAAc,CAAC1B,EAAGC,EAAGW,EAAU4D,EAAgB3D,WAEzD6D,QAAQC,KAAK,oBAInBrG,EAAYsG,QAAU,WACpBrB,EAAY,UACZG,EAAU,GAAAK,OAAAhC,OAAAiC,EAAA,EAAAjC,CAAKL,GAAL,CAAc,CAAC1B,EAAGC,EAAGW,EAAU,SAAKC,OAEhDvC,EAAYiB,MAAQ,WAClBmF,QAAQG,IAAI,mBACZzB,GAAa,GACbR,GAAY,KAGdtE,EAAYwG,SAEb,CAAC3B,IAEJW,oBAAU,WACR,GAAI5C,EAAiB,CACnB,IAAMhC,EAAMT,EAhJlB,WACE,IAAMsG,EAAW,CAAC,SAAU,MAAO,mBAAiB,YACpD,OAAOA,EAASvF,EAAsB,EAAGuF,EAASlG,OAAS,IA8I1BmG,IAC7BhG,gBAAgBkF,MAAMhF,KAEvB,CAACgC,IAGFJ,EAAAd,EAAAe,cAAA,OAAKQ,UAAU,OACbT,EAAAd,EAAAe,cAAA,OAAKQ,UAAU,cACbT,EAAAd,EAAAe,cAAA,OAAKQ,UAAU,eACbT,EAAAd,EAAAe,cAACkE,EAAD,CAASvD,QAASA,KAEpBZ,EAAAd,EAAAe,cAAA,OAAKQ,UAAU,YACbT,EAAAd,EAAAe,cAACmE,EAAD,CACElF,EAAGA,EACHC,EAAGA,EACHW,SAAUA,EACVC,OAAQA,EACRV,SAAUA,IAGZW,EAAAd,EAAAe,cAACoE,EAAD,CACEjE,gBAAiBA,EACjBf,SAAUA,EACVU,OAAQA,IAGVC,EAAAd,EAAAe,cAAA,SACED,EAAAd,EAAAe,cAAA,UACEQ,UAAU,aACV6D,SAAUzC,EACV0C,QAAS,SAAAC,GACP/B,IACAX,GAAY,KALhB,aCzMQ2C,QACW,cAA7BhH,OAAOiH,SAASC,UAEe,UAA7BlH,OAAOiH,SAASC,UAEhBlH,OAAOiH,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO9E,EAAAd,EAAAe,cAAC8E,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.ac363f1a.chunk.js","sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\nimport classNames from \"classnames\";\nimport \"./App.css\";\n\n// msg.volume = 1; // 0 to 1\n// msg.rate = 1; // 0.1 to 10\n// msg.pitch = 2; //0 to 2\n// msg.text = \"Hello World\";\n\nvar recognition = new window.webkitSpeechRecognition();\nrecognition.continuous = false;\nrecognition.interimResults = false;\nrecognition.lang = [\"it-IT\", \"Italia\"];\n\nfunction getSpeechMessage(text, callback = () => {}) {\n  const voices = window.speechSynthesis.getVoices();\n  const msg = new SpeechSynthesisUtterance();\n  msg.voice = voices[9];\n  msg.voiceURI = \"native\";\n  msg.lang = \"it-IT\";\n  msg.text = text;\n  msg.onend = callback;\n  return msg;\n}\n\nfunction getRandomIntInclusive(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min; //Il max è incluso e il min è incluso\n}\n\nfunction getCalculus(min, max) {\n  const a = getRandomIntInclusive(min, max);\n  const b = getRandomIntInclusive(min, max);\n  return [a, b, a * b];\n}\n\nfunction parseResponse(response) {\n  const numbersFound = response.replace(/[^0-9 ]/).split(\" \");\n  return parseInt(numbersFound[numbersFound.length - 1], 10);\n}\n\nfunction getCorrectMotivationMessage() {\n  const messages = [\"Bravo!\", \"Ok!\", \"Continua così\", \"Perfetto\"];\n  return messages[getRandomIntInclusive(0, messages.length - 1)];\n}\n\nconst Calculus = ({ a, b, operator, result, response }) => {\n  if (a && b) {\n    return (\n      <p>\n        {a} {operator} {b} = {response ? result : \"?\"}\n      </p>\n    );\n  }\n  return <p>&nbsp;</p>;\n};\n\nconst Response = ({ isCorrectAnswer, response, result }) => {\n  const classes = classNames({\n    correct: isCorrectAnswer,\n    error: !isCorrectAnswer\n  });\n  if (response) {\n    return (\n      <p>\n        La tua risposta è <b>{response}</b>.<br />\n        {isCorrectAnswer ? (\n          <i className={classes}>Bravo, la risposta è corretta!</i>\n        ) : (\n          <i className={classes}>\n            La risposta è sbagliata <b>{result}</b>!\n          </i>\n        )}\n      </p>\n    );\n  }\n  return <p>&nbsp;</p>;\n};\n\nconst History = ({ history }) => {\n  return (\n    <ul>\n      {history.map(([a, b, operator, response, result], i) => {\n        const isCorrectAnswer = response === result;\n        return (\n          <li key={i}>\n            {a} {operator} {b} = {response}{\" \"}\n            {isCorrectAnswer ? (\n              <span className=\"correct\">✔</span>\n            ) : (\n              <>\n                <span className=\"error\">✘</span> <b>({result})</b>\n              </>\n            )}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nfunction App({ min = 6, max = 9, operator = \"x\" }) {\n  const [calculus, setCalculus] = useState(false);\n  const [matrix, setMatrix] = useState([]);\n  const [listening, setListening] = useState(false);\n  const [response, setResponse] = useState();\n  const [history, setHistory] = useState([]);\n\n  const [a, b, result] = useMemo(() => {\n    if (matrix.length) {\n      return matrix[matrix.length - 1];\n    }\n    return [];\n  }, [matrix]);\n\n  // console.log(\n  //   \"listening\",\n  //   listening,\n  //   \"→ \",\n  //   a,\n  //   operator,\n  //   b,\n  //   \"=\",\n  //   result,\n  //   \" → \",\n  //   response\n  // );\n\n  const isCorrectAnswer = useMemo(() => {\n    if (result && response) {\n      return result === response;\n    }\n    return undefined;\n  }, [result, response]);\n\n  useEffect(() => {\n    if (calculus) {\n      setMatrix([...matrix, getCalculus(min, max)]);\n    }\n  }, [calculus]);\n\n  useEffect(() => {\n    if (a && b) {\n      const msg = getSpeechMessage(`${a} x ${b}`, event => {\n        setListening(true);\n      });\n      window.speechSynthesis.speak(msg);\n    }\n  }, [a, b]);\n\n  useEffect(() => {\n    if (listening === undefined) {\n      return;\n    }\n    if (listening === true && recognition) {\n      recognition.start();\n      recognition.onresult = function(event) {\n        for (var i = event.resultIndex; i < event.results.length; ++i) {\n          if (event.results[i].isFinal) {\n            const speechResponse = parseResponse(\n              event.results[i][0].transcript\n            );\n            setResponse(speechResponse);\n            setHistory([...history, [a, b, operator, speechResponse, result]]);\n          } else {\n            console.warn(\"Not implemented\");\n          }\n        }\n      };\n      recognition.onerror = function() {\n        setResponse(\"＿\");\n        setHistory([...history, [a, b, operator, \"＿\", result]]);\n      };\n      recognition.onend = function() {\n        console.log(\"recognition end\");\n        setListening(false);\n        setCalculus(false);\n      };\n    } else {\n      recognition.stop();\n    }\n  }, [listening]);\n\n  useEffect(() => {\n    if (isCorrectAnswer) {\n      const msg = getSpeechMessage(getCorrectMotivationMessage());\n      speechSynthesis.speak(msg);\n    }\n  }, [isCorrectAnswer]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <div className=\"App-results\">\n          <History history={history} />\n        </div>\n        <div className=\"App-main\">\n          <Calculus\n            a={a}\n            b={b}\n            operator={operator}\n            result={result}\n            response={response}\n          />\n\n          <Response\n            isCorrectAnswer={isCorrectAnswer}\n            response={response}\n            result={result}\n          />\n\n          <p>\n            <button\n              className=\"App-button\"\n              disabled={calculus}\n              onClick={e => {\n                setResponse();\n                setCalculus(true);\n              }}\n            >\n              Via!\n            </button>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}