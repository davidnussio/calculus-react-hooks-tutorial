{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["getSpeechMessage","text","callback","arguments","length","undefined","voices","window","speechSynthesis","getVoices","msg","SpeechSynthesisUtterance","voice","voiceURI","lang","onend","getRandomIntInclusive","min","max","Math","ceil","floor","random","getCalculus","operator","a","b","Calculus","_ref","result","response","react_default","createElement","Response","_ref2","isCorrectAnswer","classes","classNames","correct","error","className","History","_ref3","history","map","_ref4","i","_ref5","Object","slicedToArray","speechRecognition","key","Fragment","App","_ref6","_ref6$min","_ref6$max","_ref6$operator","_useState7","useState","_useState8","calculus","setCalculus","_useState9","_useState10","listening","setListening","_useState11","_useState12","speaking","setSpeaking","_useState13","_useState14","setResponse","_useState15","_useState16","setIsCorrectAnswer","_calculus","_useResultHistory","KEY","storage","localStorage","_useState","JSON","parse","getItem","_useState2","setHistory","updateHistory","useCallback","nextHistoryItem","updatedHistory","concat","toConsumableArray","console","log","setItem","stringify","save","useResultHistory","_useResultHistory2","saveHistory","_useState3","_useState4","speechResponse","setSpeechResponse","_useState5","instance","webkitSpeechRecognition","continuous","interimResults","recognition","onstart","onresult","event","resultIndex","results","isFinal","transcript","warn","onerror","prevState","useEffect","start","stop","useSpeechRecognition","userResult","numbersFound","replace","split","parseInt","parseResponse","Number","isNaN","speak","messages","getCorrectMotivationMessage","App_History","App_Calculus","App_Response","disabled","onClick","e","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4effce07.chunk.js","sourcesContent":["// @ts-check\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport \"./App.css\";\n\n// msg.volume = 1; // 0 to 1\n// msg.rate = 1; // 0.1 to 10\n// msg.pitch = 2; //0 to 2\n// msg.text = \"Hello World\";\n\nfunction getSpeechMessage(text, callback = () => {}) {\n  const voices = window.speechSynthesis.getVoices();\n  const msg = new SpeechSynthesisUtterance();\n  msg.voice = voices[9];\n  msg.voiceURI = \"native\";\n  msg.lang = \"it-IT\";\n  msg.text = text;\n  msg.onend = callback;\n  return msg;\n}\n\nfunction getRandomIntInclusive(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min; //Il max è incluso e il min è incluso\n}\n\nfunction getCalculus(min, max, operator) {\n  const a = getRandomIntInclusive(min, max);\n  const b = getRandomIntInclusive(min, max);\n  if (operator === \"x\") {\n    return [a, b, a * b];\n  } else if (operator === \"+\") {\n    return [a, b, a + b];\n  }\n}\n\nfunction getCorrectMotivationMessage() {\n  const messages = [\"Bravo!\", \"Ok!\", \"Continua così\", \"Perfetto\"];\n  return messages[getRandomIntInclusive(0, messages.length - 1)];\n}\n\nfunction parseResponse(response) {\n  if (response === null) {\n    return \"＿\";\n  }\n  const numbersFound = response.replace(/[^0-9 ]/).split(\" \");\n  return parseInt(numbersFound[numbersFound.length - 1], 10);\n}\n\nfunction useResultHistory() {\n  const KEY = \"__history_results_storage__\";\n  const storage = window.localStorage;\n\n  const [history, setHistory] = useState(\n    JSON.parse(window.localStorage.getItem(KEY)) || []\n  );\n\n  const updateHistory = useCallback(\n    nextHistoryItem => {\n      if (nextHistoryItem) {\n        const updatedHistory = [...history, nextHistoryItem];\n        console.log(\"History\", history, nextHistoryItem, updatedHistory);\n        setHistory(updatedHistory);\n        storage.setItem(KEY, JSON.stringify(updatedHistory));\n      }\n    },\n    [history]\n  );\n\n  return [history, save => updateHistory(save)];\n}\n\nconst Calculus = ({ a, b, operator, result, response }) => {\n  if (a !== undefined && b !== undefined) {\n    return (\n      <p>\n        {a} {operator} {b} = {response ? result : \"?\"}\n      </p>\n    );\n  }\n  return <p>&nbsp;</p>;\n};\n\nconst Response = ({ isCorrectAnswer, response, result }) => {\n  const classes = classNames({\n    correct: isCorrectAnswer,\n    error: !isCorrectAnswer\n  });\n  if (response) {\n    return (\n      <p>\n        La tua risposta è <b>{response}</b>.<br />\n        {isCorrectAnswer ? (\n          <i className={classes}>Bravo, la risposta è corretta!</i>\n        ) : (\n          <i className={classes}>\n            La risposta è sbagliata, il risultato era <b>{result}</b>!\n          </i>\n        )}\n      </p>\n    );\n  }\n  return <p>&nbsp;</p>;\n};\n\nconst History = ({ history }) => {\n  return (\n    <table>\n      <tbody>\n        {history.map(\n          ([a, b, operator, response, speechRecognition, result], i) => {\n            const isCorrectAnswer = response === result;\n            return (\n              <tr key={i} className=\"App-history-wrapper\">\n                <td>{a}</td>\n                <td>{operator}</td>\n                <td>{b}</td>\n                <td>=</td>\n                <td>{response === \"NaN\" ? speechRecognition : response}</td>\n\n                {isCorrectAnswer ? (\n                  <td>\n                    <span className=\"correct\">✔</span>\n                  </td>\n                ) : (\n                  <>\n                    <td>\n                      <span className=\"error\">✘</span>\n                    </td>\n                    <td>\n                      <b>({result})</b>\n                    </td>\n                  </>\n                )}\n              </tr>\n            );\n          }\n        )}\n      </tbody>\n    </table>\n  );\n};\n\nfunction useSpeechRecognition(listening = false) {\n  const [speechResponse, setSpeechResponse] = useState(undefined);\n  const [recognition] = useState(() => {\n    const instance = new window.webkitSpeechRecognition();\n    instance.continuous = false;\n    instance.interimResults = false;\n    instance.lang = [\"it-IT\", \"Italia\"];\n    return instance;\n  });\n\n  recognition.onstart = function() {\n    console.log(\"# recognition → onstart\");\n  };\n\n  recognition.onresult = function(event) {\n    console.log(\"# recognition → onresult\");\n    for (var i = event.resultIndex; i < event.results.length; ++i) {\n      if (event.results[i].isFinal) {\n        setSpeechResponse(event.results[i][0].transcript);\n      } else {\n        console.warn(\"Not implemented\");\n      }\n    }\n  };\n  recognition.onerror = function() {\n    console.log(\"# recognition → onerror\");\n    setSpeechResponse(null); //\"＿\");\n  };\n  recognition.onend = function() {\n    console.log(\"# recognition → onend\");\n    setSpeechResponse(prevState => prevState);\n  };\n\n  useEffect(() => {\n    if (listening === true && recognition) {\n      recognition.start();\n    } else {\n      recognition.stop();\n    }\n  }, [listening]);\n\n  return speechResponse;\n}\n\nfunction App({ min = 0, max = 10, operator = \"x\" }) {\n  const [calculus, setCalculus] = useState([]);\n  const [listening, setListening] = useState(false);\n  const [speaking, setSpeaking] = useState(false);\n  const [response, setResponse] = useState(null);\n  const [isCorrectAnswer, setIsCorrectAnswer] = useState(null);\n\n  const [a, b, result] = calculus;\n\n  const [history, saveHistory] = useResultHistory();\n\n  const speechRecognition = useSpeechRecognition(listening);\n\n  useEffect(() => {\n    if (speechRecognition !== undefined) {\n      const userResult = parseResponse(speechRecognition);\n      saveHistory([a, b, operator, userResult, speechRecognition, result]);\n      setResponse(userResult);\n      setIsCorrectAnswer(result === userResult);\n      setListening(false);\n    }\n  }, [speechRecognition]);\n\n  useEffect(() => {\n    if (speaking && Number.isNaN(a) === false && Number.isNaN(b) === false) {\n      const msg = getSpeechMessage(`${a} x ${b}`, event => {\n        setSpeaking(false);\n        setListening(true);\n      });\n      window.speechSynthesis.speak(msg);\n    }\n  }, [speaking]);\n\n  useEffect(() => {\n    if (isCorrectAnswer) {\n      const msg = getSpeechMessage(getCorrectMotivationMessage());\n      speechSynthesis.speak(msg);\n    }\n  }, [isCorrectAnswer]);\n\n  useCallback(() => {\n    setIsCorrectAnswer(null);\n    setResponse(null);\n    setCalculus(getCalculus(min, max, operator));\n    setSpeaking(true);\n  }, [min, max, operator]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <div className=\"App-results\">\n          <History history={history} />\n        </div>\n        <div className=\"App-main\">\n          <Calculus\n            a={a}\n            b={b}\n            operator={operator}\n            result={result}\n            response={response}\n          />\n\n          <Response\n            isCorrectAnswer={isCorrectAnswer}\n            response={response}\n            result={result}\n          />\n\n          <p>\n            <button\n              className=\"App-button\"\n              disabled={speaking || listening}\n              onClick={e => {\n                setIsCorrectAnswer(null);\n                setResponse(null);\n                setCalculus(getCalculus(min, max, operator));\n                setSpeaking(true);\n              }}\n            >\n              Avanti...\n            </button>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}